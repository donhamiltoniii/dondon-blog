---
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "../../../layouts/DefaultPageLayout.astro";
import RecipesList from "../../../components/RecipesList.astro";
import type { FoodAsset } from "../../../types";
import {
  getFoodAssets,
  getFoodAssetsByTag,
} from "../../../utils/get-food-assets";

const { tag } = Astro.params as { tag: string };

export async function getStaticPaths() {
  const foodAssets = await getFoodAssets();

  const allTags = [...new Set(foodAssets.flatMap((fa) => fa.data.tags))];

  return allTags.map((tag) => ({
    params: { tag },
    props: { tag },
  }));
}

const recipesByTag = await getFoodAssetsByTag(tag);
---

<Layout title={tag} description={`Recipes with the tag: ${tag}`}>
  <div class="tag-page">
    <h1>Recipes tagged with "{tag}"</h1>

    {
      recipesByTag.length > 0 ? (
        <RecipesList recipes={recipesByTag} />
      ) : (
        <p>No recipes found with this tag.</p>
      )
    }

    <a href="/food/tags">View all tags</a>
  </div>
</Layout>

<style>
  .tag-page {
    padding: 2rem 0;
  }

  .tag-page h1 {
    margin-bottom: 2rem;
  }
</style>
