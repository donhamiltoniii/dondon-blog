name: Release and Build Docker Image

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REGISTRY: registry.thedondon.org
  IMAGE_NAME: dondon-developments

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    outputs:
      new-release-published: ${{ steps.semantic-release.outputs.new-release-published }}
      new-release-version: ${{ steps.semantic-release.outputs.new-release-version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Fetch full history for semantic-release
          fetch-depth: 0
          # Use a PAT to allow pushing back to the repo
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22" # Latest LTS version (22.14.0)
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests (optional)
        run: npm test
        continue-on-error: true

      - name: Build site
        run: npm run build

      - name: Semantic Release
        id: semantic-release
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }} # Only if publishing to npm
        with:
          semantic_version: 24.2.7
          extra_plugins: |
            @semantic-release/changelog@6.0.3
            @semantic-release/git@10.0.1

  build-docker:
    runs-on: ubuntu-latest
    needs: release
    if: github.ref == 'refs/heads/main' && (contains(github.event.head_commit.message, 'feat:') || contains(github.event.head_commit.message, 'fix:'))
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Personal Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=raw,value=v${{ needs.release.outputs.new-release-version }},enable=${{ needs.release.outputs.new-release-published == 'true' }}
            type=sha,prefix={{date 'YYYYMMDD-HHmmss'}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Keep your manual version bump as backup
  manual-bump:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, '[bump]')
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Bump version
        run: |
          # Determine bump type from commit message
          if [[ "${{ github.event.head_commit.message }}" == *"[bump major]"* ]]; then
            npm version major
          elif [[ "${{ github.event.head_commit.message }}" == *"[bump minor]"* ]]; then
            npm version minor
          else
            npm version patch
          fi

      - name: Push changes
        run: |
          git push origin main --follow-tags
